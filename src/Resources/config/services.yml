services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: false
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: false
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # add more services, or override services that need manual wiring
    # QueueJobsBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'


    queue.driver.interface:
        class: Evilnet\QueueJobsBundle\QueueAdapter\RedisAdapter
        arguments:
            - '%queue_redis_ip%'
            - '%queue_redis_port%'

    queue.serializer.interface:
        class: Evilnet\QueueJobsBundle\Dispatcher\Serializers\DefaultSerializer

    queue.unserializer.interface:
        class: Evilnet\QueueJobsBundle\Worker\Unserializers\DefaultUnserializer

    queue.worker.interface:
        class: Evilnet\QueueJobsBundle\Worker\Worker
        arguments: ['@jobs.driver.interface', '@jobs.unserializer.interface', '@event_dispatcher']

    queue.dispatcher.interface:
        class: Evilnet\QueueJobsBundle\Dispatcher\Dispatcher
        arguments: ['@jobs.serializer.interface', '@jobs.driver.interface', '%default_queue_name%']

    queue.command.work_command:
        class: Evilnet\QueueJobsBundle\Command\WorkerCommand
        arguments: ['Evilnet\QueueJobsBundle\Command', '@jobs.worker.interface']
        tags:
            - { name: console.command, command: 'worker:start' }

    queue.command.dispatch_test_command:
        class: Evilnet\QueueJobsBundle\Command\DispatchTestCommand
        arguments: ['Evilnet\QueueJobsBundle\Command', '@jobs.dispatcher.interface']
        tags:
            - { name: console.command, command: 'dispatch:test' }